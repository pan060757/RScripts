for (i in 2010:2015){
print(tapply(data$avg_hgroupFees,data$year,sum)[as.character(i)])    ####按照年份进行统计
}
for (i in 2010:2015){
year_fees <- tapply(data$avg_hgroupFees,data$year,sum)[as.character(i)])    ####按照年份进行统计
print(year_fees)
}
for (i in 2010:2015){
year_fees <- tapply(data$avg_hgroupFees,data$year,sum)[as.character(i)]    ####按照年份进行统计
print(year_fees)
}
year_fees['2014']    ###保存每年的人均统筹费用支出
year_fees[2014]    ###保存每年的人均统筹费用支出
year_fees["2014"]    ###保存每年的人均统筹费用支出
tapply(a$consumption,a$customer,sum)
tapply(a$consumption,a$customer,sum)['a']
a=data.frame(customer=c('a','b','a','m','a','b'),consumption=1:6)
a
a=data.frame(customer=c('a','b','a','m','a','b'),consumption=1:6)
a
tapply(a$consumption,a$customer,sum)
tapply(a$consumption,a$customer,length)
tapply(a$consumption,a$customer,sum)['a']
for (i in 2010:2015){
year_fees <- tapply(data$avg_hgroupFees,data$year,sum)    ####按照年份进行统计
print(year_fees)
}
year_fees <- tapply(data$avg_hgroupFees,data$year,sum)    ####按照年份进行统计
print(year_fees['2010'])
year_fees <- tapply(data$avg_hgroupFees,data$year,sum)    ####按照年份进行统计
####不考率人口年龄结构时，风险因素
for(i in 1:nrow(data)){            ###遍历每一行
print(data$year)            ####对应年份
print(data$age_group)       ####对应年龄组
avg_hgroupfees <- data$avg_hgroupFees         ####该年,各个年龄组对应的人均统筹费用支出
all_hgroupfees <- year_fees[as.character(data$year)]  ###该年，总共人均统筹费用支出
risk <- avg_hgroupfees/all_hgroupfees     ####风险系数
cat("风险系数：",risk,"\n")
}
year_fees <- tapply(data$avg_hgroupFees,data$year,sum)    ####按照年份进行统计
####不考率人口年龄结构时，风险因素
for(i in 1:nrow(data)){            ###遍历每一行
print(data[i,]$year)            ####对应年份
print(data[i,]$age_group)       ####对应年龄组
avg_hgroupfees <- data[i,]$avg_hgroupFees         ####该年,各个年龄组对应的人均统筹费用支出
all_hgroupfees <- year_fees[as.character(data[i,]$year)]  ###该年，总共人均统筹费用支出
risk <- avg_hgroupfees/all_hgroupfees     ####风险系数
cat("风险系数：",risk,"\n")
}
data <- read.csv("E:/毕业设计/建模结果/age_AvghgroupFees.csv")
data
###(年份,所属年龄组,人均住院统筹费用支出,参保人数)
colnames(data) <- c("year","age_group","avg_hgroupFees","number","hgroupFees")      ##列重命名
data
year_fees
####不考虑人口年龄结构时，风险因素
year_fees <- tapply(data$avg_hgroupFees,data$year,sum)    ####按照年份进行统计
###考虑人口年龄结构时
age_fees <- tapply(data$hgroupFees,data$year,sum)    ####按照年份进行统计
for(i in 1:nrow(data)){            ###遍历每一行
print(data[i,]$year)            ####对应年份
print(data[i,]$age_group)       ####对应年龄组
####不考虑年龄结构风险系数计算
avg_yearFees <- data[i,]$avg_hgroupFees         ####该年,各个年龄组对应的人均统筹费用支出
all_yearFees <- year_fees[as.character(data[i,]$year)]  ###该年，总共人均统筹费用支出
cat("不考虑年龄结构各年龄段风险系数：",year_risk,"\n")
####考虑年龄结构风险系数计算
avg_ageFees <- data[i,]$hgroupFees      ####该年,各个年龄组对应的人均统筹费用支出
all_ageFees <- age_fees[as.character(data[i,]$year)]  ###该年，总共人均统筹费用支出
year_risk <- avg_hgroupfees/all_hgroupfees     ####不考虑年龄结构风险系数
age_risk <- avg_ageFees /all_ageFees     ####考虑年龄结构风险系数
cat("考虑人口结构各年龄段风险系数：",age_risk,"\n")
}
#年龄结构对人均住院统筹费用支出的影响
data <- read.csv("E:/毕业设计/建模结果/age_AvghgroupFees.csv")
data
###(年份,所属年龄组,人均住院统筹费用支出,参保人数)
colnames(data) <- c("year","age_group","avg_hgroupFees","number","hgroupFees")      ##列重命名
data
####不考虑人口年龄结构时，风险因素
year_fees <- tapply(data$avg_hgroupFees,data$year,sum)    ####按照年份进行统计
###考虑人口年龄结构时
age_fees <- tapply(data$hgroupFees,data$year,sum)    ####按照年份进行统计
for(i in 1:nrow(data)){            ###遍历每一行
print(data[i,]$year)            ####对应年份
print(data[i,]$age_group)       ####对应年龄组
####不考虑年龄结构风险系数计算
avg_yearFees <- data[i,]$avg_hgroupFees         ####该年,各个年龄组对应的人均统筹费用支出
all_yearFees <- year_fees[as.character(data[i,]$year)]  ###该年，总共人均统筹费用支出
year_risk <- avg_hgroupfees/all_hgroupfees     ####不考虑年龄结构风险系数
cat("不考虑年龄结构各年龄段风险系数：",year_risk,"\n")
####考虑年龄结构风险系数计算
avg_ageFees <- data[i,]$hgroupFees      ####该年,各个年龄组对应的人均统筹费用支出
all_ageFees <- age_fees[as.character(data[i,]$year)]  ###该年，总共人均统筹费用支出
age_risk <- avg_ageFees /all_ageFees     ####考虑年龄结构风险系数
cat("考虑人口结构各年龄段风险系数：",age_risk,"\n")
}
year_risk
age_risk
#年龄结构对人均住院统筹费用支出的影响
data <- read.csv("E:/毕业设计/建模结果/age_AvghgroupFees.csv")
data
###(年份,所属年龄组,人均住院统筹费用支出,参保人数)
colnames(data) <- c("year","age_group","avg_hgroupFees","number","hgroupFees")      ##列重命名
data
####不考虑人口年龄结构时，风险因素
year_fees <- tapply(data$avg_hgroupFees,data$year,sum)    ####按照年份进行统计
###考虑人口年龄结构时
age_fees <- tapply(data$hgroupFees,data$year,sum)    ####按照年份进行统计
age <- c()
year <- c()
for(i in 1:nrow(data)){            ###遍历每一行
print(data[i,]$year)            ####对应年份
print(data[i,]$age_group)       ####对应年龄组
####不考虑年龄结构风险系数计算
avg_yearFees <- data[i,]$avg_hgroupFees         ####该年,各个年龄组对应的人均统筹费用支出
all_yearFees <- year_fees[as.character(data[i,]$year)]  ###该年，总共人均统筹费用支出
year_risk <- avg_hgroupfees/all_hgroupfees     ####不考虑年龄结构风险系数
year <- c(year,year_risk)
cat("不考虑年龄结构各年龄段风险系数：",year_risk,"\n")
####考虑年龄结构风险系数计算
avg_ageFees <- data[i,]$hgroupFees      ####该年,各个年龄组对应的人均统筹费用支出
all_ageFees <- age_fees[as.character(data[i,]$year)]  ###该年，总共人均统筹费用支出
age_risk <-avg_ageFees /all_ageFees  ####考虑年龄结构风险系数
age <- c(age,age_risk)
cat("考虑人口结构各年龄段风险系数：",age_risk,"\n")
}
year
age
options(scipen=200)
#年龄结构对人均住院统筹费用支出的影响
data <- read.csv("E:/毕业设计/建模结果/age_AvghgroupFees.csv")
data
###(年份,所属年龄组,人均住院统筹费用支出,参保人数)
colnames(data) <- c("year","age_group","avg_hgroupFees","number","hgroupFees")      ##列重命名
data
####不考虑人口年龄结构时，风险因素
year_fees <- tapply(data$avg_hgroupFees,data$year,sum)    ####按照年份进行统计
###考虑人口年龄结构时
age_fees <- tapply(data$hgroupFees,data$year,sum)    ####按照年份进行统计
age <- c()
year <- c()
for(i in 1:nrow(data)){            ###遍历每一行
print(data[i,]$year)            ####对应年份
print(data[i,]$age_group)       ####对应年龄组
####不考虑年龄结构风险系数计算
avg_yearFees <- data[i,]$avg_hgroupFees         ####该年,各个年龄组对应的人均统筹费用支出
all_yearFees <- year_fees[as.character(data[i,]$year)]  ###该年，总共人均统筹费用支出
year_risk <- avg_hgroupfees/all_hgroupfees     ####不考虑年龄结构风险系数
year <- c(year,year_risk)
cat("不考虑年龄结构各年龄段风险系数：",year_risk,"\n")
####考虑年龄结构风险系数计算
avg_ageFees <- data[i,]$hgroupFees      ####该年,各个年龄组对应的人均统筹费用支出
all_ageFees <- age_fees[as.character(data[i,]$year)]  ###该年，总共人均统筹费用支出
age_risk <-avg_ageFees /all_ageFees  ####考虑年龄结构风险系数
age <- c(age,age_risk)
cat("考虑人口结构各年龄段风险系数：",age_risk,"\n")
}
year
age
#年龄结构对人均住院统筹费用支出的影响
data <- read.csv("E:/毕业设计/建模结果/age_AvghgroupFees.csv")
data
###(年份,所属年龄组,人均住院统筹费用支出,参保人数)
colnames(data) <- c("year","age_group","avg_hgroupFees","number","hgroupFees")      ##列重命名
data
####不考虑人口年龄结构时，风险因素
year_fees <- tapply(data$avg_hgroupFees,data$year,sum)    ####按照年份进行统计
###考虑人口年龄结构时
age_fees <- tapply(data$hgroupFees,data$year,sum)    ####按照年份进行统计
result1 <- c()
result2<- c()
for(i in 1:nrow(data)){            ###遍历每一行
print(data[i,]$year)            ####对应年份
print(data[i,]$age_group)       ####对应年龄组
####不考虑年龄结构风险系数计算
avg_yearFees <- data[i,]$avg_hgroupFees         ####该年,各个年龄组对应的人均统筹费用支出
all_yearFees <- year_fees[as.character(data[i,]$year)]  ###该年，总共人均统筹费用支出
year_risk <- avg_hgroupfees/all_hgroupfees     ####不考虑年龄结构风险系数
result1 <- c(result1,year_risk)
cat("不考虑年龄结构各年龄段风险系数：",year_risk,"\n")
####考虑年龄结构风险系数计算
avg_ageFees <- data[i,]$hgroupFees      ####该年,各个年龄组对应的人均统筹费用支出
all_ageFees <- age_fees[as.character(data[i,]$year)]  ###该年，总共人均统筹费用支出
age_risk <-avg_ageFees /all_ageFees  ####考虑年龄结构风险系数
result2 <- c(result2,age_risk)
cat("考虑人口结构各年龄段风险系数：",age_risk,"\n")
}
result1
result2
#年龄结构对人均住院统筹费用支出的影响
data <- read.csv("E:/毕业设计/建模结果/age_AvghgroupFees.csv")
data
###(年份,所属年龄组,人均住院统筹费用支出,参保人数)
colnames(data) <- c("year","age_group","avg_hgroupFees","number","hgroupFees")      ##列重命名
data
####不考虑人口年龄结构时，风险因素
year_fees <- tapply(data$avg_hgroupFees,data$year,sum)    ####按照年份进行统计
###考虑人口年龄结构时
age_fees <- tapply(data$hgroupFees,data$year,sum)    ####按照年份进行统计
result1 <- c()
result2<- c()
for(i in 1:nrow(data)){            ###遍历每一行
print(data[i,]$year)            ####对应年份
print(data[i,]$age_group)       ####对应年龄组
####不考虑年龄结构风险系数计算
avg_yearFees <- data[i,]$avg_hgroupFees         ####该年,各个年龄组对应的人均统筹费用支出
all_yearFees <- year_fees[as.character(data[i,]$year)]  ###该年，总共人均统筹费用支出
year_risk <- avg_hgroupfees/all_yearFees     ####不考虑年龄结构风险系数
result1 <- c(result1,year_risk)
cat("不考虑年龄结构各年龄段风险系数：",year_risk,"\n")
####考虑年龄结构风险系数计算
avg_ageFees <- data[i,]$hgroupFees      ####该年,各个年龄组对应的人均统筹费用支出
all_ageFees <- age_fees[as.character(data[i,]$year)]  ###该年，总共人均统筹费用支出
age_risk <-avg_ageFees /all_ageFees  ####考虑年龄结构风险系数
result2 <- c(result2,age_risk)
cat("考虑人口结构各年龄段风险系数：",age_risk,"\n")
}
result1
result2
#年龄结构对人均住院统筹费用支出的影响
data <- read.csv("E:/毕业设计/建模结果/age_AvghgroupFees.csv")
data
###(年份,所属年龄组,人均住院统筹费用支出,参保人数)
colnames(data) <- c("year","age_group","avg_hgroupFees","number","hgroupFees")      ##列重命名
data
####不考虑人口年龄结构时，风险因素
year_fees <- tapply(data$avg_hgroupFees,data$year,sum)    ####按照年份进行统计
###考虑人口年龄结构时
age_fees <- tapply(data$hgroupFees,data$year,sum)    ####按照年份进行统计
result1 <- c()
result2<- c()
for(i in 1:nrow(data)){            ###遍历每一行
print(data[i,]$year)            ####对应年份
print(data[i,]$age_group)       ####对应年龄组
####不考虑年龄结构风险系数计算
avg_yearFees <- data[i,]$avg_hgroupFees         ####该年,各个年龄组对应的人均统筹费用支出
all_yearFees <- year_fees[as.character(data[i,]$year)]  ###该年，总共人均统筹费用支出
year_risk <- avg_yearFees/all_yearFees     ####不考虑年龄结构风险系数
result1 <- c(result1,year_risk)
cat("不考虑年龄结构各年龄段风险系数：",year_risk,"\n")
####考虑年龄结构风险系数计算
avg_ageFees <- data[i,]$hgroupFees      ####该年,各个年龄组对应的人均统筹费用支出
all_ageFees <- age_fees[as.character(data[i,]$year)]  ###该年，总共人均统筹费用支出
age_risk <-avg_ageFees /all_ageFees  ####考虑年龄结构风险系数
result2 <- c(result2,age_risk)
cat("考虑人口结构各年龄段风险系数：",age_risk,"\n")
}
result1
result2
#年龄结构对人均住院统筹费用支出的影响
data <- read.csv("E:/毕业设计/建模结果/age_AvghgroupFees.csv")
data
###(年份,所属年龄组,人均住院统筹费用支出,参保人数)
colnames(data) <- c("year","age_group","avg_hgroupFees","number","hgroupFees")      ##列重命名
data
####不考虑人口年龄结构时，风险因素
year_fees <- tapply(data$avg_hgroupFees,data$year,sum)    ####按照年份进行统计
###考虑人口年龄结构时
age_fees <- tapply(data$hgroupFees,data$year,sum)    ####按照年份进行统计
result1 <- c()
result2<- c()
for(i in 1:nrow(data)){            ###遍历每一行
print(data[i,]$year)            ####对应年份
print(data[i,]$age_group)       ####对应年龄组
####不考虑年龄结构风险系数计算
avg_yearFees <- data[i,]$avg_hgroupFees         ####该年,各个年龄组对应的人均统筹费用支出
all_yearFees <- year_fees[as.character(data[i,]$year)]  ###该年，总共人均统筹费用支出
year_risk <- avg_yearFees/all_yearFees     ####不考虑年龄结构风险系数
result1 <- c(result1,year_risk)
cat("不考虑年龄结构各年龄段风险系数：",year_risk,"\n")
####考虑年龄结构风险系数计算
avg_ageFees <- data[i,]$hgroupFees      ####该年,各个年龄组对应的人均统筹费用支出
all_ageFees <- age_fees[as.character(data[i,]$year)]  ###该年，总共人均统筹费用支出
age_risk <-avg_ageFees /all_ageFees  ####考虑年龄结构风险系数
result2 <- c(result2,age_risk)
cat("考虑人口结构各年龄段风险系数：",age_risk,"\n")
}
result1
result2
dataseries <- ts(cost$totalFees)
plot.ts(dataseries)
dataseries <- ts(income$totalIncome)
dataseries
month <- season(ts(income$totalIncome))
model <- lm(income$totalIncome~month)
summary(model)
n<-36
t<-ts(1:n, frequency =1, start =as.Date("2010-01-29"))
s <- as.Date("2010-01-29")
dates<-seq(from=s, by=1, length.out=n)
t<-data.frame(dates,t)
head(t)
n<-36
t<-ts(1:n, frequency =1, start =as.Date("2010-01-29"))
s <- as.Date("2010-01-29")
dates<-seq(from=s, by=1, length.out=n)
t<-data.frame(dates,t)
t
dataseries <- ts(income$totalIncome,frequency=12)
dataseries
plot.ts(dataseries)
dataseries <- ts(cost$totalFees)
plot.ts(dataseries)
month <- season(ts(income$totalIncome))
model <- lm(income$totalIncome~month)
summary(model)
month <- season(ts(income$totalIncome,frequency=12))
model <- lm(income$totalIncome~month)
summary(model)
month <- season(ts(income$totalIncome,frequency=4))
model <- lm(income$totalIncome~month)
summary(model)
month <- season(ts(cost$Fees,frequency=12))
model <- lm(cost$Fees~month)
summary(model)
month <- season(ts(cost$Fees,frequency=12))
model <- lm(cost$Fees~month)
summary(model)
month <- season(ts(cost$totalFees,frequency=12))
model <- lm(cost$totalFees~month)
summary(model)
cost <- c(12679,19805,25829,35186,48708,60951,72716,90335)
costseries <- ts(cost)
costdiff1 <- diff(costseries,differences = 1)
plot.ts(costdiff1)
##二阶差分
costdiff2 <- diff(costseries,differences = 2)
plot.ts(costdiff2)
#三阶差分
#三阶差分
costdiff3<- diff(costseries,differences=3)
plot.ts(costdiff3)
incomeSMA <- SMA(incomeseries,n=3)
plot.ts(incomeSMA)
X0 <- c(13643,15406,18183,21350,23313,25649,27053,31340,37648,41121)
####对2014年平均工资进行预测(使用2006-2013年的数据)
predict <- gm(X0[1:8],1)
errorRate <- (predict-X0[9])/X0[9]*100
errorRate
####对2015年平均工资进行预测(使用2006-2014年的数据)
predict <- gm(X0[1:9],1)
errorRate <- (predict-X0[10])/X0[10]*100
errorRate
####对未来5年平均工资进行预测(使用2006-2015年的数据)
predict <- gm(X0[1:10],5)
predict
####指数平滑法
####对2014年平均工资进行预测(使用2006-2013年的数据)
predict <- Holt1(X0[1:8],1)
predict
errorRate <- (predict-X0[9])/X0[9]*100
errorRate
####对2015年平均工资进行预测(使用2006-2014年的数据)
predict <- Holt1(X0[1:9],1)
predict
errorRate <- (predict-X0[10])/X0[10]*100
errorRate
####对未来5年进行预测(使用2006-2015年的数据)
predict <- Holt1(X0[1:10],5)
predict
source("E:/毕业设计/project/RScripts/gm11.R")
source("E:/毕业设计/project/RScripts/指数平滑法.R")
source("E:/毕业设计/project/RScripts/gm11.R")
source("E:/毕业设计/project/RScripts/指数平滑法建模.R")
X0 <- c(13643,15406,18183,21350,23313,25649,27053,31340,37648,41121)
####对2014年平均工资进行预测(使用2006-2013年的数据)
predict <- gm(X0[1:8],1)
errorRate <- (predict-X0[9])/X0[9]*100
errorRate
####对2015年平均工资进行预测(使用2006-2014年的数据)
predict <- gm(X0[1:9],1)
errorRate <- (predict-X0[10])/X0[10]*100
errorRate
####对未来5年平均工资进行预测(使用2006-2015年的数据)
predict <- gm(X0[1:10],5)
predict
####指数平滑法
####对2014年平均工资进行预测(使用2006-2013年的数据)
predict <- Holt1(X0[1:8],1)
predict
errorRate <- (predict-X0[9])/X0[9]*100
errorRate
####对2015年平均工资进行预测(使用2006-2014年的数据)
predict <- Holt1(X0[1:9],1)
predict
errorRate <- (predict-X0[10])/X0[10]*100
errorRate
####对未来5年进行预测(使用2006-2015年的数据)
predict <- Holt1(X0[1:10],5)
predic
source("E:/毕业设计/project/RScripts/gm11.R")
source("E:/毕业设计/project/RScripts/指数平滑法建模.R")
X0 <- c(13643,15406,18183,21350,23313,25649,27053,31340,37648,41121)
####对2014年平均工资进行预测(使用2006-2013年的数据)
predict <- gm(X0[1:8],1)
errorRate <- (predict-X0[9])/X0[9]*100
errorRate
predict <- gm(X0[1:8],1)
X0 <- c(13643,15406,18183,21350,23313,25649,27053,31340,37648,41121)
####对2014年平均工资进行预测(使用2006-2013年的数据)
predict <- gm(X0[1:8],1)
pedic
X0 <- c(13643,15406,18183,21350,23313,25649,27053,31340,37648,41121)
####对2014年平均工资进行预测(使用2006-2013年的数据)
predict <- gm(X0[1:8],1)
pedict
X0 <- c(13643,15406,18183,21350,23313,25649,27053,31340,37648,41121)
####对2014年平均工资进行预测(使用2006-2013年的数据)
predict <- gm(X0[1:8],1)
predict
pre_value<- gm(X0[1:8],1)
pre_value
predict <- Holt1(X0[1:9],1)
predict
errorRate <- (predict-X0[10])/X0[10]*100
errorRate
predict <- Holt1(X0[1:8],1)
predict
errorRate <- (predict-X0[9])/X0[9]*100
errorRate
predict <- Holt1(X0[1:8],1)
predict
#####平均工资建模(gm11效果更好)
source("E:/毕业设计/project/RScripts/gm11.R")
source("E:/毕业设计/project/RScripts/指数平滑法建模.R")
X0 <- c(13643,15406,18183,21350,23313,25649,27053,31340,37648,41121)
####对2014年平均工资进行预测(使用2006-2013年的数据)
predict<- gm(X0[1:8],1)
errorRate <- (predict-X0[9])/X0[9]*100
errorRate
predict <- gm(X0[1:9],1)
errorRate <- (predict-X0[10])/X0[10]*100
errorRate
####对未来5年平均工资进行预测(使用2006-2015年的数据)
predict <- gm(X0[1:10],5)
predict
source("E:/毕业设计/project/RScripts/gm11.R")
source("E:/毕业设计/project/RScripts/指数平滑法建模.R")
X0 <- c(13643,15406,18183,21350,23313,25649,27053,31340,37648,41121)
####对2014年平均工资进行预测(使用2006-2013年的数据)
predict<- gm(X0[1:8],1)
errorRate <- (predict-X0[9])/X0[9]*100
errorRate
X0 <- c(13643,15406,18183,21350,23313,25649,27053,31340,37648,41121)
####对2014年平均工资进行预测(使用2006-2013年的数据)
predict<- gm(X0[1:8],1)
errorRate <- (predict-X0[9])/X0[9]*100
errorRate
predict <- gm(X0[1:9],1)
errorRate <- (predict-X0[10])/X0[10]*100
errorRate
predict <- gm(X0[1:10],5)
predict
predict <- Holt1(X0[1:8],1)
predict
predict <- Holt1(X0[1:8],1)
predict
source("E:/毕业设计/project/RScripts/gm11.R")
source("E:/毕业设计/project/RScripts/指数平滑法建模.R")
predict <- Holt1(X0[1:8],1)
predict
predict <- Holt1(X0[1:8],1)
predict
predict <- Holt1(X0[1:8],1)
predict
library("forecast")
install.packages("forecast")
Q
Q
Q
Q
install.packages("forecast")
library("forecast")
predict <- Holt1(X0[1:8],1)
predict
errorRate <- (predict-X0[9])/X0[9]*100
errorRate
library("forecast")
predict <- Holt1(X0[1:8],1)
predict
library("forecast")
source("E:/毕业设计/project/RScripts/gm11.R")
source("E:/毕业设计/project/RScripts/指数平滑法建模.R")
library("forecast")
source("E:/毕业设计/project/RScripts/gm11.R")
source("E:/毕业设计/project/RScripts/指数平滑法建模.R")
predict <- Holt1(X0[1:8],1)
predict
errorRate <- (predict-X0[9])/X0[9]*100
errorRate
library("forecast")
rainseriesforecast2 <- forecast.HoltWinters(rainseriesforecast,h=2)
rainseriesforecast2
library("forecast")
rainseriesforecast2 <- forecast.HoltWinters(rainseriesforecast,h=2)
rainseriesforecast2
library("forecast")
rainseriesforecast2 <- HoltWinters(rainseriesforecast,h=2)
rainseriesforecast2
predict <- Holt1(X0[1:8],1)
predict
errorRate <- (predict-X0[9])/X0[9]*100
errorRate
#####平均工资建模(gm11效果更好)
library("forecast")
source("E:/毕业设计/project/RScripts/gm11.R")
source("E:/毕业设计/project/RScripts/指数平滑法建模.R")
predict <- gm(X0[1:9],1)
errorRate <- (predict-X0[10])/X0[10]*100
errorRate
Q
